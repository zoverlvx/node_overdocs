{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","query","where","params","findOne","library","method","post","create","body","console","log","put","findOneAndUpdate","$push","entries","description","delete","findOneAndRemove","send","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\n\n//GET all libraries\nrouter.get('/libraries', (req, res) => {\n\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//GET singular library\nrouter.get('/libraries/:library_name', (req, res) => {\n    let query = Libraries.where({\n        library_name: req.params.library_name\n    });\n\n    query.findOne((err, library) => {\n        if (err) {\n            return res.status(404).json({\n                status: 'error'\n            });\n        }\n        else {\n            res.json(library)\n        }\n    });\n});\n\n//GET singular method\nrouter.get('/libraries/:library_name/:method', (req, res) => {\n    let query = Libraries.where({\n        method: req.params.method\n    });\n    query.findOne((err, method) => {\n        if (err) {\n            return res.status(404).json({\n                status: 'error'\n            });\n        }\n        else {\n            res.json(method)\n        }\n    });\n});\n\n//GET method\n// router.get('/libraries/:library_name/', (req, res) => { // deleted :method\n//     console.log('Got methods');\n//     Libraries.findOne({\n//         method: req.params.method\n//     }), (err, description) => {\n\n//         if (typeof method === 'undefined') {\n//             return res.status(404).json({\n//                 status: 'error'\n//             });\n//         }\n//         else if (err) {\n//             return res.status(500).json({\n//                 message: 'Method not found.'\n//             });\n//         }\n//         res.json(description);\n//         console.log(description);\n//     }\n// });\n\n//POST libraries\nrouter.post('/libraries', (req, res) => {\n    Libraries.create({\n        library_name: req.body.library_name\n    }, (err, library) => {\n\n        if (typeof library_name === 'undefined') {\n            return res.status(412).json({\n                status: 'Precondition wasn\\'t met'\n            });\n        }\n        else if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n        console.log(library);\n    });\n});\n\n//PUT method and description to library\nrouter.put('/libraries/:library_name', (req, res) => {\n    Libraries.findOneAndUpdate({\n        library_name: req.params.library_name,\n    }, {\n        $push: {\n            entries: {\n                method: req.body.method,\n                description: req.body.description\n            }\n        }\n    }, (err, library) => {\n\n        if (typeof method === 'undefined' || typeof description === 'undefined') {\n            res.status(404).json({\n                status: 'error'\n            });\n        }\n        else if (err) {\n            console.log(err)\n        }\n        console.log(library);\n    });\n});\n\n//DELETE library and methods \nrouter.delete('/libraries/:library_name', (req, res) => {\n    Libraries.findOneAndRemove({\n        library_name: req.params.library_name\n    }, (err, library) => {\n        if (err) {\n            console.log(err);\n            res.status(500).send();\n        }\n        console.log(library);\n        res.status(200).send();\n    });\n});\n\n//DELETE methods and descriptions\nrouter.delete('libraries/:library_name/:method', (req, res) => {\n    console.log('Delete method');\n    Libraries.findOneAndRemove({\n        entries: {\n            method: req.params.method,\n            description: req.params.description\n        }\n    }, (err, method) => {\n        if (err) {\n            console.log(err);\n            res.status(500).send();\n        }\n        console.log(method);\n        res.status(200).send();\n    });\n});\n\n//DELETE methods and descriptions\n// router.delete('libraries/:library_name/:method', (req, res) => {\n//     Libraries.find({\n//         entries: {\n//             method: req.params.method,\n//             description: req.params.description\n//         }\n\n//     }).remove(), (err, deletedMethod) => {\n//         if (err) {\n//             console.log(err);\n//             res.status(500).send();\n//         }\n//         console.log(deletedMethod);\n//         res.status(200).send();\n//     }\n// });\n\n// router.delete('libraries/:library_name', (req, res) => {\n//     Libraries.remove({ \n//         entries: [{\n//             method: req.body.method,\n//             description: req.body.description\n//         }]\n//     }, (err, deletedMethod) => {\n//         if (err) {\n//             console.log(err);\n//             res.status(500).send();\n//         }\n//         console.log(deletedMethod);\n//         res.status(200).send();\n//     });\n// });\n\n// router.delete('libraries/:library_name/:method', (req, res) => {\n//     Libraries.find().remove({ \n//         entries: [{\n//             method: req.body.method,\n//             description: req.body.description\n//         }]\n//     }, (err, deletedMethod) => {\n//         if (err) {\n//             console.log(err);\n//             res.status(500).send();\n//         }\n//         console.log(deletedMethod);\n//         res.status(200).send();\n//     });\n// });\n\n//DELETE method and description // First attempt\n// router.delete('/libraries/:library_name/:method', (req, res) => {\n//     let method = req.body.method;\n//     let description = req.body.description;\n//     Libraries.find().remove({ //tried using just .remove() as well\n//         entries: {\n//             method: method,\n//             description: description\n//         },\n\n//     }, (err) => {\n//         if (err) {\n//             console.log(err);\n//             res.status(500).send();\n//         }\n\n//         res.status(200).send();\n//     });\n// });\n\n// second attempt\n// router.delete('/libraries/:library_name/:method', (req, res) => {\n//     Libraries.findOne({\n//         entries: {\n//             method: req.body.method,\n//             description: req.body.description\n//         }\n//     }, (err, deletedMethod) => {\n//         if (err) {\n//             console.log(err);\n//         }\n//         Libraries.remove((err) => {\n//             console.log(err);\n//         });\n//     });\n// });\n\nmodule.exports = router;\n"]}