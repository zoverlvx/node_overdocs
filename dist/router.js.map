{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","findOne","_id","params","library","method","description","post","create","body","put","findByIdAndUpdate","delete","findByIdAndRemove","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\n//GET all libraries\nrouter.get('/libraries', (req, res) => {\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//GET single library // I don't think this is doing anything on the DOM yet\nrouter.get('/libraries/:_id', (req, res) => {\n    Libraries.findOne({\n        _id: req.params._id\n    }), (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Library not found'\n            });\n        }\n        res.json(library);\n    }\n});\n\n//on request of route of libraries/library_name\n//spits out an array of entries[i].method and entries[i].description\n\n//GET method\nrouter.get('/libraries/library_name', (req, res) => {\n    Libraries.findOne({\n        method: req.params.method,\n        description: req.params.description //this isn't declared???\n    }), (err, method) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Method not found'\n            });\n        }\n        res.json(method);\n    }\n});\n\n\n//POST libraries\nrouter.post('/libraries', (req, res) => {\n    //console.log(req.body);\n    Libraries.create({\n        library_name: req.body.library_name\n    }, (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n    });\n});\n\n// router.put('/libraries/library_name', (req, res) => {\n//     Libraries.findOneAndUpdate({ _id: req.params.id }, Libraries.entries[{\n//         method: res,\n//         description: res\n//     }]);\n// });\n\nrouter.put('/libraries/:_id', (req, res) => {\n    Libraries.findByIdAndUpdate({_id: req.params._id})    \n});\n\n//POST library object in Mongo\n// router.post('/libraries', (req, res) => {\n//     console.log(req.body);\n//     let mylibraryToAdd = new Libraries({\n//             library_name: req.body.toString(),\n//             entries: [{\n//                 method: req.body.toString(),\n//                 description: req.body.toString()\n//             }]\n//         })\n//         mylibraryToAdd.save((err, library) => {\n//             if (err) {\n//                 console.error(err);                \n//             }            \n//                 console.log({library});\n            \n//         });\n        \n// });\n\n\n//Seems doable\nrouter.delete('/libraries/:_id', (req, res) => {\n\n    Libraries.findByIdAndRemove(req.params._id, (err, library) => {\n        if (err) {\n            return res.status(404);\n        }\n        res.json({\n            message: 'Library deleted.'\n        })\n    });\n\n});\n\nmodule.exports = router;\n"]}