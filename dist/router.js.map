{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","console","log","params","body","findOne","method","entries","description","post","create","library","put","findOneAndUpdate","exec","update","send","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\n\n//GET all libraries\nrouter.get('/libraries', (req, res) => {\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//GET method \nrouter.get('/libraries/:library_name/', (req, res) => {\n\n    console.log('This is with params ' + req.params.library_name);\n    console.log('This is with body ' + req.body);\n\n    Libraries.findOne({\n        method: req.params.library_name.entries[0].method\n    }), (err, method) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Method not found.'\n            });\n        }\n        res.json(method);\n    }\n});\n\n//GET description\nrouter.get('/libraries/:library_name/:method/', (req, res) => {\n    Libraries.findOne({\n        description: req.params.library_name.entries[0].description\n    }), (err, description) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Description not found.'\n            });\n        }\n        res.json(description);\n    }\n});\n\n//POST libraries\nrouter.post('/libraries', (req, res) => {\n    Libraries.create({\n        library_name: req.params.library_name\n    }, (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n    });\n});\n\n//PUT\nrouter.put('/libraries/:library_name', (req, res) => {\n    Libraries.findOneAndUpdate({\n            \"library_name\": req.params.library_name\n        }, {\n            \"$set\": {\n                \"method\": req.params.library_name.entries[0].method,\n                \"description\": req.params.library_name.entries[0].description\n            }\n        })\n        .exec((err, update) => {\n            if (err) {\n                res.status(500).send(err);\n            }\n            else {\n                res.status(200).send(update);\n            }\n        })\n});\n\n//StackOverFlow Example\n// Book.findOneAndUpdate({ \"_id\": bookId }, { \"$set\": { \"name\": name, \"genre\": genre, \"author\": author, \"similar\": similar}}).exec(function(err, book){\n//   if(err) {\n//       console.log(err);\n//       res.status(500).send(err);\n//   } else {\n//             res.status(200).send(book);\n//   }\n// });\n\n//DELETE library and methods\n\n//DELETE method and description\n\nmodule.exports = router;\n"]}