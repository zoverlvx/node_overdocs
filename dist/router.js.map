{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","findOne","method","params","entries","description","post","create","library","put","findOneAndUpdate","delete","findByIdAndRemove","_id","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\n//GET all libraries\nrouter.get('/libraries', (req, res) => {\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//GET single library // I think I need to update this with methods and descriptions\n// router.get('/libraries/:library_name', (req, res) => {\n//     console.log('Libraries.library_name: ', Libraries);\n//     console.log('params.library_name: ', req.params);\n//     Libraries.findOne({\n//         library_name: req.params.library_name\n//     }), (err, library) => {\n//         if (err) {\n//             return res.status(500).json({\n//                 message: 'Library not found'\n//             });\n//         }\n//         res.json(library);\n//     }\n// });\n\n// e.g. Adventure.findOne({ type: 'iphone' }, function (err, adventure) {});\n\n\n//GET method \nrouter.get('/libraries/:library_name/:method', (req, res) => {\n    Libraries.findOne({\n        method: req.params.library_name.entries[0].method\n    }), (err, method) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Method not found.'\n            });\n        }\n        res.json(method);\n    }\n});\n\n//GET description\nrouter.get('/libraries/:library_name/:method/:description', (req, res) => {\n   Libraries.findOne({\n       description: req.params.library_name.entries[0].description\n   }), (err, description) => {\n       if (err) {\n           return res.status(500).json({\n               message: 'Description not found.'\n           });\n       }\n       res.json(description);\n   }\n});\n\n\n//POST libraries\nrouter.post('/libraries', (req, res) => {\n    //console.log(req.body);\n    Libraries.create({\n        library_name: req.params.library_name\n    }, (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n    });\n});\n\n\n//PUT \nrouter.put('/libraries/:method/:description', (req, res) => {\n    Libraries.findOneAndUpdate({\n        library_name: Libraries.library_name\n    }, Libraries.entries[{\n        method: req.params.library_name.entries[0].method,\n        description: req.params.library_name.entries[0].description\n    }]); //This doesn't look right at all\n});\n\n// Not sure if this is better code for the PUT\n\n// router.put(`/libraries/${Libraries.library_name}`, (req, res) => {\n//     Libraries.findOneAndUpdate({\n//         \"library_name\": Libraries.library_name\n//     }, {\n//         \"$set\": {\n//             \"method\": Libraries.library_name.entries[0].method,\n//             \"description\": Libraries.library_name.entries[0].description\n//         }\n//     }).exec((err, library) => {\n//         if (err) {\n//             console.log(err);\n//             res.status(500).send(err);\n//         }\n//         else {\n//             res.status(200).send(library);\n//         }\n//     });\n// });\n\n\n\n//POST library object in Mongo\n// router.post('/libraries', (req, res) => {\n//     console.log(req.body);\n//     let mylibraryToAdd = new Libraries({\n//             library_name: req.body.toString(),\n//             entries: [{\n//                 method: req.body.toString(),\n//                 description: req.body.toString()\n//             }]\n//         })\n//         mylibraryToAdd.save((err, library) => {\n//             if (err) {\n//                 console.error(err);                \n//             }            \n//                 console.log({library});\n\n//         });\n\n// });\n\n\n//Seems doable\nrouter.delete('/libraries/:_id', (req, res) => {\n\n    Libraries.findByIdAndRemove(req.params._id, (err, library) => {\n        if (err) {\n            return res.status(404);\n        }\n        res.json({\n            message: 'Library deleted.'\n        })\n    });\n\n});\n\nmodule.exports = router;\n"]}