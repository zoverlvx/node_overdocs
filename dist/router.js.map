{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","console","log","body","find","err","library_name","status","message","findOne","params","method","description","post","create","library","findOneAndUpdate","$set","entries","put","updatedMethod","send","updatedDescription","delete","findOneAndRemove","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\n\n//GET all libraries\nrouter.get('/libraries', (req, res) => {\n    //console.log(req.headers['user-agent']);\n    //console.log(req.headers);\n    console.log(req.body);\n\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//GET library\nrouter.get('/libraries/:library_name/', (req, res) => {\n    Libraries.findOne({\n        library_name: req.params.library_name\n    }), (err, method) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Library not found.'\n            });\n        }\n        res.json(method);\n    }\n});\n\n//GET method\nrouter.get('/libraries/:library_name/:method/', (req, res) => {\n    console.log(req.params);\n    Libraries.findOne({\n        method: req.params.method\n    }), (err, description) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Method not found.'\n            });\n        }\n        res.json(description);\n    }\n});\n\n//POST libraries\nrouter.post('/libraries', (req, res) => {\n    console.log(req.body);\n    console.log('This is params', req.params);\n    Libraries.create({\n        library_name: req.body.library_name\n    }, (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n    });\n});\n\n//POST method and description to library\nrouter.post('/libraries/:library_name', (req, res) => {\n    console.log(req.body);\n    Libraries.findOneAndUpdate({\n        library_name: req.params.library_name,\n    }, {\n        $set: {\n            entries: [{\n                method: req.body.method,\n                description: req.body.description\n            }]\n        }\n    }, (err, library) => {\n        if (err) {\n            console.log(err)\n        }\n        console.log(library);\n    });\n});\n\n\n//PUT\n// router.put('/libraries/:library_name', (req, res) => {\n//     console.log('This is req.body: ', req.body);\n//     console.log('This is req.params ',  req.params);\n//     console.log('This is req.body.entries[0] ', req.body.entries[0]);\n//     console.log('This is req.body.entries[0].method ', req.body.entries[0].method);\n//     console.log('This is req.body.entries[0].description', req.body.entries[0].description);\n//     console.log('This is req.params.library_name', req.params.library_name);\n//console.log('This is req.body.library_name', req.body.library_name);\n\n//     Libraries.findOneAndUpdate({\n//             \"library_name\": req.params.library_name\n//         }, \n//         {\n//             $set: [{\n//                 \"method\": req.body.entries[0].method,\n//                 \"description\": req.body.entries[0].description\n//             }]\n//         })\n//         .exec((err, update) => {\n//             console.log('Update', update);\n//             if (err) {\n//                 res.status(500).send(err);\n//             }\n//             else {\n//                 res.status(200).send(update);\n//             }\n//         })\n// });\n\n// This is to edit the name of an already existing library\n// router.put('/libraries/:library_name', (req, res) => {\n//     let library_name = req.params.library_name;\n//     Libraries.findOne({\n//         library_name: library_name\n//     }, (err, updatedLibrary) => {\n//         if (err) {\n//             res.status(500).send(err);\n//         }\n//         else if (req.params.library_name) {\n//             updatedLibrary.library_name = req.params.library_name;\n//             res.status(200).send(updatedLibrary);\n//         }\n//     });\n// });\n\n// need a an edit button to change the library_name instead of using submit specifically\n\n//This is to edit the name of an already existing method\nrouter.put('/libraries/:library_name/:method', (req, res) => { // params as it relates to body, I understand // query - still more to be said //url\n    let method = req.body.entries[0].method;\n    Libraries.findOne({\n        method: method\n    }, (err, updatedMethod) => {\n        if (err) {\n            res.status(500).send(err);\n        }\n        else if (req.body.entries[0].method) {\n            updatedMethod.method = req.body.entries[0].method;\n            res.status(200).send(updatedMethod);\n\n        }\n    });\n});\n\nrouter.put('/libraries/:library_name/:method/:description', (req, res) => {\n    let description = req.body.entries[0].description // still, no idea why this is doing this   \n    Libraries.findOne({\n        description: description\n    }, (err, updatedDescription) => {\n        if (err) {\n            res.status(500).send(err);\n        }\n        else if (req.body.entries[0].description) {\n            updatedDescription.description = req.body.entries[0].description;\n            res.status(200).send(updatedDescription);\n        }\n    });\n});\n\n// params - \n// body -\n// query -\n\n\n//DELETE library and methods\nrouter.delete('/libraries/:library_name', (req, res) => {\n    let library_name = req.body.library_name;\n    Libraries.findOneAndRemove({\n        library_name: library_name\n    }, (err) => {\n        if (err) {\n            console.log(err);\n            res.status(500).send();\n        }\n\n        res.status(200).send();\n    });\n});\n\n\n//DELETE method and description\nrouter.delete('/libraries/:library_name/:method', (req, res) => {\n    let method = req.body.method;\n    Libraries.findOneAndRemove({\n        method: method\n    }, (err) => {\n        if (err) {\n            console.log(err);\n            res.status(500).send();\n        }\n\n        res.status(200).send();\n    });\n});\n\nmodule.exports = router;\n"]}