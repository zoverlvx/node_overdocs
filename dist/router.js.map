{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","query","where","params","findOne","library","console","log","method","description","post","create","body","put","findOneAndUpdate","$push","entries","delete","findOneAndRemove","send","remove","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMF,SAAZ;AACA,IAAMG,SAASH,QAAQI,MAAR,EAAf;AACA,IAAMC,WAAWJ,QAAQ,UAAR,CAAjB;AACA,IAAMK,YAAYL,QAAQ,mBAAR,CAAlB;AACA,IAAMM,IAAIN,QAAQ,YAAR,CAAV;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,aAAaD,WAAWE,IAAX,EAAnB;;AAEAR,IAAIS,GAAJ,CAAQF,UAAR;;AAGA;AACAN,OAAOS,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;;AAEnCR,cAAUS,IAAV,CAAe,UAACC,GAAD,EAAMC,YAAN,EAAuB;AAClC,YAAID,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBS,yBAAS;AADe,aAArB,CAAP;AAGH;AACDL,YAAIJ,IAAJ,CAASO,YAAT;AACH,KAPD;AAQH,CAVD;;AAYA;AACAd,OAAOS,GAAP,CAAW,0BAAX,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjD,QAAIM,QAAQd,UAAUe,KAAV,CAAgB;AACxBJ,sBAAcJ,IAAIS,MAAJ,CAAWL;AADD,KAAhB,CAAZ;;AAIAG,UAAMG,OAAN,CAAc,UAACP,GAAD,EAAMQ,OAAN,EAAkB;AAC5B,YAAIR,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBQ,wBAAQ;AADgB,aAArB,CAAP;AAGH,SAJD,MAKK;AACDJ,gBAAIJ,IAAJ,CAASc,OAAT;AACH;AACJ,KATD;AAUH,CAfD;;AAiBA;AACArB,OAAOS,GAAP,CAAW,2BAAX,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAE;AACpDW,YAAQC,GAAR,CAAY,aAAZ;AACApB,cAAUiB,OAAV,CAAkB;AACdI,gBAAQd,IAAIS,MAAJ,CAAWK;AADL,KAAlB,GAEI,UAACX,GAAD,EAAMY,WAAN,EAAsB;;AAEtB,YAAI,OAAOD,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,mBAAOb,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBQ,wBAAQ;AADgB,aAArB,CAAP;AAGH,SAJD,MAKK,IAAIF,GAAJ,EAAS;AACV,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBS,yBAAS;AADe,aAArB,CAAP;AAGH;AACDL,YAAIJ,IAAJ,CAASkB,WAAT;AACAH,gBAAQC,GAAR,CAAYE,WAAZ;AACH,KAhBD;AAiBH,CAnBD;;AAqBA;AACA;;AAEA;AACAzB,OAAO0B,IAAP,CAAY,YAAZ,EAA0B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACpCR,cAAUwB,MAAV,CAAiB;AACbb,sBAAcJ,IAAIkB,IAAJ,CAASd;AADV,KAAjB,EAEG,UAACD,GAAD,EAAMQ,OAAN,EAAkB;;AAEjB,YAAI,OAAOP,YAAP,KAAwB,WAA5B,EAAyC;AACrC,mBAAOH,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBQ,wBAAQ;AADgB,aAArB,CAAP;AAGH,SAJD,MAKK,IAAIF,GAAJ,EAAS;AACV,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBS,yBAAS;AADe,aAArB,CAAP;AAGH;AACDL,YAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqBc,OAArB;AACAC,gBAAQC,GAAR,CAAYF,OAAZ;AACH,KAhBD;AAiBH,CAlBD;;AAoBA;AACArB,OAAO6B,GAAP,CAAW,0BAAX,EAAuC,UAACnB,GAAD,EAAMC,GAAN,EAAc;AACjDR,cAAU2B,gBAAV,CAA2B;AACvBhB,sBAAcJ,IAAIS,MAAJ,CAAWL;AADF,KAA3B,EAEG;AACCiB,eAAO;AACHC,qBAAS;AACLR,wBAAQd,IAAIkB,IAAJ,CAASJ,MADZ;AAELC,6BAAaf,IAAIkB,IAAJ,CAASH;AAFjB;AADN;AADR,KAFH,EASG,UAACZ,GAAD,EAAMQ,OAAN,EAAkB;;AAEjB,YAAI,OAAOG,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,WAAP,KAAuB,WAA5D,EAAyE;AACrEd,gBAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACjBQ,wBAAQ;AADS,aAArB;AAGH,SAJD,MAKK,IAAIF,GAAJ,EAAS;AACVS,oBAAQC,GAAR,CAAYV,GAAZ;AACH;AACDS,gBAAQC,GAAR,CAAYF,OAAZ;AACH,KApBD;AAqBH,CAtBD;;AAwBA;AACArB,OAAOiC,MAAP,CAAc,0BAAd,EAA0C,UAACvB,GAAD,EAAMC,GAAN,EAAc;AACpD,QAAIG,eAAeJ,IAAIS,MAAJ,CAAWL,YAA9B;AACAX,cAAU+B,gBAAV,CAA2B;AACvBpB,sBAAcA;AADS,KAA3B,EAEG,UAACD,GAAD,EAAMQ,OAAN,EAAkB;AACjB,YAAIR,GAAJ,EAAS;AACLS,oBAAQC,GAAR,CAAYV,GAAZ;AACAF,gBAAII,MAAJ,CAAW,GAAX,EAAgBoB,IAAhB;AACH;AACDb,gBAAQC,GAAR,CAAYF,OAAZ;AACAV,YAAII,MAAJ,CAAW,GAAX,EAAgBoB,IAAhB;AACH,KATD;AAUH,CAZD;;AAcA;AACAnC,OAAOiC,MAAP,CAAc,kCAAd,EAAkD,UAACvB,GAAD,EAAMC,GAAN,EAAc;AAC5D,QAAIa,SAASd,IAAIkB,IAAJ,CAASJ,MAAtB;AACA,QAAIC,cAAcf,IAAIkB,IAAJ,CAASH,WAA3B;AACAtB,cAAUS,IAAV,GAAiBwB,MAAjB,CAAwB;AACpBJ,iBAAS;AACLR,oBAAQA,MADH;AAELC,yBAAaA;AAFR;;AADW,KAAxB,EAMG,UAACZ,GAAD,EAAS;AACR,YAAIA,GAAJ,EAAS;AACLS,oBAAQC,GAAR,CAAYV,GAAZ;AACAF,gBAAII,MAAJ,CAAW,GAAX,EAAgBoB,IAAhB;AACH;;AAEDxB,YAAII,MAAJ,CAAW,GAAX,EAAgBoB,IAAhB;AACH,KAbD;AAcH,CAjBD;;AAmBAE,OAAOC,OAAP,GAAiBtC,MAAjB","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\n\n//GET all libraries\nrouter.get('/libraries', (req, res) => {\n\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//GET singular library\nrouter.get('/libraries/:library_name', (req, res) => {\n    let query = Libraries.where({\n        library_name: req.params.library_name\n    });\n\n    query.findOne((err, library) => {\n        if (err) {\n            return res.status(404).json({\n                status: 'error'\n            });\n        }\n        else {\n            res.json(library)\n        }\n    });\n});\n\n//GET method\nrouter.get('/libraries/:library_name/', (req, res) => { // deleted :method\n    console.log('Got methods');\n    Libraries.findOne({\n        method: req.params.method\n    }), (err, description) => {\n\n        if (typeof method === 'undefined') {\n            return res.status(404).json({\n                status: 'error'\n            });\n        }\n        else if (err) {\n            return res.status(500).json({\n                message: 'Method not found.'\n            });\n        }\n        res.json(description);\n        console.log(description);\n    }\n});\n\n//GET Method edit\n// router.get()\n\n//POST libraries\nrouter.post('/libraries', (req, res) => {\n    Libraries.create({\n        library_name: req.body.library_name\n    }, (err, library) => {\n\n        if (typeof library_name === 'undefined') {\n            return res.status(412).json({\n                status: 'Precondition wasn\\'t met'\n            });\n        }\n        else if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n        console.log(library);\n    });\n});\n\n//PUT method and description to library\nrouter.put('/libraries/:library_name', (req, res) => {\n    Libraries.findOneAndUpdate({\n        library_name: req.params.library_name,\n    }, {\n        $push: {\n            entries: {\n                method: req.body.method,\n                description: req.body.description\n            }\n        }\n    }, (err, library) => {\n\n        if (typeof method === 'undefined' || typeof description === 'undefined') {\n            res.status(404).json({\n                status: 'error'\n            });\n        }\n        else if (err) {\n            console.log(err)\n        }\n        console.log(library);\n    });\n});\n\n//DELETE library and methods // works beautifully\nrouter.delete('/libraries/:library_name', (req, res) => {\n    let library_name = req.params.library_name;\n    Libraries.findOneAndRemove({\n        library_name: library_name\n    }, (err, library) => {\n        if (err) {\n            console.log(err);\n            res.status(500).send();\n        }\n        console.log(library);\n        res.status(200).send();\n    });\n});\n\n//DELETE method and description // Can't tell if this is completely working because I can't GET methods to DOM\nrouter.delete('/libraries/:library_name/:method', (req, res) => {\n    let method = req.body.method;\n    let description = req.body.description;\n    Libraries.find().remove({\n        entries: {\n            method: method,\n            description: description\n        },\n\n    }, (err) => {\n        if (err) {\n            console.log(err);\n            res.status(500).send();\n        }\n\n        res.status(200).send();\n    });\n});\n\nmodule.exports = router;\n\n"]}