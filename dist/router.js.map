{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","findOne","_id","params","library","method","description","console","log","post","body","mylibraryToAdd","toString","entries","save","error","put","delete","findByIdAndRemove","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n\napp.use(jsonParser);\n\nrouter.get('/libraries', (req, res) => {\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name);\n    });\n});\n\n//is this doing anything?\nrouter.get('/libraries/:_id', (req, res) => {\n    Libraries.findOne({\n        _id: req.params._id\n    }), (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Library not found'\n            });\n        }\n        res.json(library);\n    }\n});\n\n//on request of route of libraries/library_name\n//spits out an array of entries[i].method and entries[i].description\nrouter.get('/libraries/library_name', (req, res) => {\n    Libraries.findOne({\n        method: req.params.method,\n        description: req.params.description //this isn't declared???\n    }), (err, method) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Method not found'\n            });\n        }\n        res.json(method);\n        console.log(method);\n        console.log(description);\n    }\n})\n\n//POST\nrouter.post('/libraries', (req, res) => {\n    console.log(req.body);\n    console.log('Oi');\n    let mylibraryToAdd = new Libraries({\n            library_name: req.body.toString(),\n            entries: [{\n                method: 'an example',\n                description: 'an example'\n            }]\n        })\n        mylibraryToAdd.save((err, library) => {\n            if (err) {\n                console.error(err);                \n            }            \n                console.log({library});\n            \n        });\n        \n        // Libraries.create({\n        //     library_name: req.body.library_name\n        // }, (err, library) => {\n        //     if (err) {\n        //         return res.status(500).json({\n        //             message: 'Internal Server Error'\n        //         });\n        //     }\n        //     res.status(201).json(library);\n        // });\n});\n\n\n//No idea what I'm doing\nrouter.put('/libraries/:_id', (req, res) => {\n\n});\n\n//Trying to glean\n\n// app.put('/todos/:id', (req, res) => {\n//     let todoId = parseInt(req.params.id, 10);\n//     let matchedTodo = _.findWhere(todos, {\n//         id: todoId\n//     });\n\n//     let body = _.pick(req.body, 'description', 'completed'); // good for the method and description\n//     let validAttributes = {};\n\n//     if (!matchedTodo) {\n//         return res.status(404).send();\n//     }\n\n//     if (body.hasOwnProperty('completed') && _.isBoolean(body.completed)) {\n//         validAttributes.completed = body.completed;\n//     } else if (body.hasOwnProperty('completed')) {\n//         return res.status(400).send();\n//     }\n\n//     if (body.hasOwnProperty('description') && _.isString(body.description) && body.description.trim().length > 0) {\n//         validAttributes.description = body.description\n//     } else if (body.hasOwnProperty('description')) {\n//         return res.status(400).send();\n//     }\n\n//     _.extend(matchedTodo, validAttributes);\n//     res.json(matchedTodo);\n// });\n\n\nrouter.put('/libraries/library_name', (req, res) => {\n    //????\n})\n\n\n// app.put('/todos/:id', (req, res) => {\n//     let todoId = parseInt(req.params.id, 10);\n//     let matchedTodo = _.findWhere(todos, {\n//         id: todoId\n//     });\n\n//     let body = _.pick(req.body, 'description', 'completed');\n//     let validAttributes = {};\n\n//     if (!matchedTodo) {\n//         return res.status(404).send();\n//     }\n\n//     if (body.hasOwnProperty('completed') && _.isBoolean(body.completed)) {\n//         validAttributes.completed = body.completed;\n//     } else if (body.hasOwnProperty('completed')) {\n//         return res.status(400).send();\n//     }\n\n//     if (body.hasOwnProperty('description') && _.isString(body.description) && body.description.trim().length > 0) {\n//         validAttributes.description = body.description\n//     } else if (body.hasOwnProperty('description')) {\n//         return res.status(400).send();\n//     }\n\n//     _.extend(matchedTodo, validAttributes);\n//     res.json(matchedTodo);\n// });\n\n\n\n//Seems doable\nrouter.delete('/libraries/:_id', (req, res) => {\n\n    Libraries.findByIdAndRemove(req.params._id, (err, library) => {\n        if (err) {\n            return res.status(404);\n        }\n        res.json({\n            message: 'Library deleted.'\n        })\n    });\n\n});\n\n// Code I've been hoping to glean from\n\n// router.delete('/items/:id', function(request, response){\n//     console.log(request.params);\n//     var id = request.params.id;\n\n//         for (var i = 0; i < storage.items.length; i++){\n//             if (id == storage.items[i].id){\n//                 storage.items.splice(i, 1);\n//                 break;\n//             }\n//         }\n\n//         console.log(storage.items);\n//         return response.json(storage.items);\n// });\n\n\n// router.delete('/libraries/library_name', (req, res) => {\n//   Libraries.findByIdAndRemove(req.params._id, (err, method) => {\n//       if (err) {\n//           return res.status(404);\n//       }\n//       res.json({\n//           message: 'Method deleted.'\n//       });\n//   }); \n// });\n\n\n// app.delete('/todos/:id', (req, res) => {\n//     let todoId = parseInt(req.params.id, 10);\n\n//     let matchedTodo = _.findWhere(todos, {\n//         id: todoId\n//     });\n\n//     if (!matchedTodo) {\n//         res.status(404).json({\n//             \"Error\": \"No todo found with that id\"\n//         });\n//     } else {\n//         todos = _.without(todos, matchedTodo);\n//         res.json(matchedTodo);\n//     }\n// });\n\nmodule.exports = router;\n"]}