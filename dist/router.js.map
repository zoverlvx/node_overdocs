{"version":3,"sources":["../src/router.js"],"names":["express","require","app","router","Router","mongoose","Libraries","_","bodyParser","jsonParser","json","use","get","req","res","find","err","library_name","status","message","findOne","_id","params","library","post","console","log","body","create","put","nameId","parseInt","id","matchedNameId","findWhere","delete","findByIdAndRemove","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMF,SAAZ;AACA,IAAMG,SAASH,QAAQI,MAAR,EAAf;AACA,IAAMC,WAAWJ,QAAQ,UAAR,CAAjB;AACA,IAAMK,YAAYL,QAAQ,mBAAR,CAAlB;AACA,IAAMM,IAAIN,QAAQ,YAAR,CAAV;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,aAAaD,WAAWE,IAAX,EAAnB;AACA;AACA;;AAEAR,IAAIS,GAAJ,CAAQF,UAAR;;AAEAN,OAAOS,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCR,cAAUS,IAAV,CAAe,UAACC,GAAD,EAAMC,YAAN,EAAuB;AAClC,YAAID,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBS,yBAAS;AADe,aAArB,CAAP;AAGH;AACDL,YAAIJ,IAAJ,CAASO,YAAT,EANkC,CAMV;AAC3B,KAPD;AAQH,CATD;;AAYAd,OAAOS,GAAP,CAAW,iBAAX,EAA8B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCR,cAAUc,OAAV,CAAkB;AACdC,aAAKR,IAAIS,MAAJ,CAAWD;AADF,KAAlB,GAEI,UAACL,GAAD,EAAMO,OAAN,EAAkB;AAClB,YAAIP,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBS,yBAAS;AADe,aAArB,CAAP;AAGH;AACDL,YAAIJ,IAAJ,CAASa,OAAT;AACH,KATD;AAUH,CAXD;;AAeA;;AAEApB,OAAOqB,IAAP,CAAY,YAAZ,EAA0B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACpCW,YAAQC,GAAR,CAAYb,IAAIc,IAAhB;AACArB,cAAUsB,MAAV,CAAiB;AACbX,sBAAcJ,IAAIc,IAAJ,CAASV;AADV,KAAjB,EAEG,UAACD,GAAD,EAAMO,OAAN,EAAkB;AACjB,YAAIP,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AACxBS,yBAAS;AADe,aAArB,CAAP;AAGH;AACDL,YAAII,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqBa,OAArB;AACH,KATD;AAUH,CAZD;;AAgBApB,OAAO0B,GAAP,CAAW,iBAAX,EAA8B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACxC,QAAIgB,SAASC,SAASlB,IAAIS,MAAJ,CAAWU,EAApB,EAAwB,EAAxB,CAAb;AACA;AACA,QAAIC,gBAAgB1B,EAAE2B,SAAF,EAApB;AAEH,CALD;;AAOA/B,OAAOgC,MAAP,CAAc,iBAAd,EAAiC,UAACtB,GAAD,EAAMC,GAAN,EAAc;;AAE3CR,cAAU8B,iBAAV,CAA4BvB,IAAIS,MAAJ,CAAWD,GAAvC,EAA4C,UAACL,GAAD,EAAMO,OAAN,EAAkB;AAC1D,YAAIP,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,CAAP;AACH;AACDJ,YAAIJ,IAAJ,CAAS;AACLS,qBAAS;AADJ,SAAT;AAGH,KAPD;AASH,CAXD;;AAaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAkB,OAAOC,OAAP,GAAiBnC,MAAjB","file":"router.js","sourcesContent":["'use strict';\n\nconst express = require(\"express\");\nconst app = express();\nconst router = express.Router();\nconst mongoose = require('mongoose');\nconst Libraries = require('../models/library');\nconst _ = require('underscore');\nconst bodyParser = require('body-parser');\nconst jsonParser = bodyParser.json();\n//let nextId_lib = 1;\n//let nextId_code = 1;\n\napp.use(jsonParser);\n\nrouter.get('/libraries', (req, res) => {\n    Libraries.find((err, library_name) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.json(library_name); // end of reading\n    });\n});\n\n\nrouter.get('/libraries/:_id', (req, res) => { \n    Libraries.findOne({\n        _id: req.params._id\n    }), (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Library not found'\n            });\n        }\n        res.json(library);\n    }\n});\n\n\n\n//POST\n\nrouter.post('/libraries', (req, res) => {\n    console.log(req.body);\n    Libraries.create({\n        library_name: req.body.library_name\n    }, (err, library) => {\n        if (err) {\n            return res.status(500).json({\n                message: 'Internal Server Error'\n            });\n        }\n        res.status(201).json(library);\n    });\n});\n\n\n\nrouter.put('/libraries/:_id', (req, res) => {\n    let nameId = parseInt(req.params.id, 10);\n    //counter for the library id?\n    let matchedNameId = _.findWhere()\n\n});\n\nrouter.delete('/libraries/:_id', (req, res) => {\n\n    Libraries.findByIdAndRemove(req.params._id, (err, library) => {\n        if (err) {\n            return res.status(404);\n        }\n        res.json({\n            message: 'Library deleted.'\n        })\n    });\n\n});\n\n// router.use('*', function(req, res) {\n//     res.status(404).json({\n//         message: 'Not Found'\n//     });\n// });\n\n// const runServer = function(callback) {\n//     mongoose.connect(config.DATABASE_URL, function(err) {\n//         if (err && callback) {\n//             return callback(err);\n//         }\n\n//         app.listen(config.PORT, function() {\n//             console.log('Listening on localhost:' + config.PORT);\n//             if (callback) {\n//                 callback();\n//             }\n//         });\n//     });\n// };\n\n\n\nmodule.exports = router;\n"]}